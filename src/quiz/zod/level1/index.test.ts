import { describe, expect, test } from 'vitest';
import { a1, b1, b2, b3, example, o1, o2 } from '.';

const title = "Zod Level 1: „Çπ„Ç≠„Éº„Éû„ÇíÂÆöÁæ©„Åó„Å¶„Åø„Çà„ÅÜÔºÅ"

const str = 'string';
const number = 123;
const bool = true;

describe(`${title}<<‚úÖ‰æãÈ°å‚úÖ>>`, () => {
  test('‰æãÈ°å', () => {
    const schema = example();
    expect(schema.safeParse(str).success).toBeTruthy();
    expect(schema.safeParse(number).success).toBeFalsy();
    expect(schema.safeParse(bool).success).toBeFalsy();
  });
})

describe(`${title}<<üëåÂü∫Á§éüëå>>`, () => {

  test('ÊñáÂ≠óÂàóÂûã„ÅÆ„Çπ„Ç≠„Éº„Éû„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const schema = b1();
    expect(schema.safeParse(str).success).toBeTruthy();
    expect(schema.safeParse(number).success).toBeFalsy();
    expect(schema.safeParse(bool).success).toBeFalsy();
  });

  test('Êï∞ÂÄ§Âûã„ÅÆ„Çπ„Ç≠„Éº„Éû„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const schema = b2();
    expect(schema.safeParse(str).success).toBeFalsy();
    expect(schema.safeParse(number).success).toBeTruthy();
    expect(schema.safeParse(bool).success).toBeFalsy();
  });

  test('ÁúüÂÅΩÂÄ§Âûã„ÅÆ„Çπ„Ç≠„Éº„Éû„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const schema = b3();
    expect(schema.safeParse(str).success).toBeFalsy();
    expect(schema.safeParse(number).success).toBeFalsy();
    expect(schema.safeParse(bool).success).toBeTruthy();
  });
});

describe(`${title}<<ü§ØÂøúÁî®ü§Ø>>`, () => {
  test('ÊñáÂ≠óÂàó"tuna"„ÅÆ„ÅøÂÖ•„Çã„Çπ„Ç≠„Éº„Éû„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const schema = a1();
    expect(schema.safeParse('tuna').success).toBeTruthy();
    expect(schema.safeParse('fish').success).toBeFalsy();
  });
});

describe(`${title}<<üëπÈ¨ºüëπ>>`, () => {
  test('ÊñáÂ≠óÂàóÈÖçÂàó„ÅÆ„Çπ„Ç≠„Éº„Éû„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const schema = o1();
    expect(schema.safeParse([str]).success).toBeTruthy();
    expect(schema.safeParse([number]).success).toBeFalsy();
    expect(schema.safeParse([bool]).success).toBeFalsy();
  });

  test('Êï∞ÂÄ§ÈÖçÂàó„ÅÆ„Çπ„Ç≠„Éº„Éû„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const schema = o2();
    expect(schema.safeParse([str]).success).toBeFalsy();
    expect(schema.safeParse([number]).success).toBeTruthy();
    expect(schema.safeParse([bool]).success).toBeFalsy();
  });
});
