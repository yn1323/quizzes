import { describe, expect, test } from 'vitest';
import { a1, b1, b2, b3, example, } from '.';
import { ZodError } from 'zod';

const title = "Zod Level 2: ‰Ωú„Å£„Åü„Çπ„Ç≠„Éº„Éû„Çíparse„Åó„Å¶„Åø„Çà„ÅÜÔºÅ"

describe(`${title}<<‚úÖ‰æãÈ°å‚úÖ>>`, () => {
  test('‰æãÈ°å', () => {
    const result = example();
    expect(result).toStrictEqual({ success: true, data: 'hello' });
  });
})

describe(`${title}<<üëåÂü∫Á§éüëå>>`, () => {

  test('Q. safeParse„ÇíÂà©Áî®„Åó„Å¶`{ success: true; data: 123 }`„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const result = b1();
    expect(result).toStrictEqual({ success: true, data: 123 });
  });

  test('Q. safeParse„ÇíÂà©Áî®„Åó„Å¶`{ success: true; data: true }`„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const result = b2();
    expect(result).toStrictEqual({ success: true, data: true });
  });

  test('Q. safeParse„ÇíÂà©Áî®„Åó„Å¶`{ success: false; error: ZodError }`„ÇíËøîÂç¥„Åó„Çà„ÅÜ', () => {
    const result = b3();
    expect(result.success).toBeFalsy()
    expect(result.error instanceof ZodError).toBeTruthy();
  });
});

describe(`${title}<<ü§ØÁô∫Â±ïü§Ø>>`, () => {
  test('Q. Zod„ÅÆ„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏"Expected string, received array"„Åã„ÇâÈÄÜÁÆó„Åó„Å¶„Ç®„É©„Éº„ÇíËµ∑„Åì„Åù„ÅÜ', () => {
    const result = a1();
    expect(result.success).toBeFalsy()
    expect(result.error instanceof ZodError).toBeTruthy();
    expect(result.error?.errors[0].message).toBe("Expected string, received array");
  });
});

