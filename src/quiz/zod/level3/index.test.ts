import { describe, expect, test } from 'vitest';
import { a1, a2, a3, b1, b2, b3, b4, b5, example, o1 } from '.';

const title = 'Zod Level 3: „Éê„É™„Éá„Éº„Ç∑„Éß„É≥„Å§„Åç„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Å£„Å¶„Åø„Çà„ÅÜÔºÅ';

describe(`${title}<<‚úÖ‰æãÈ°å‚úÖ>>`, () => {
  test('‰æãÈ°å', () => {
    const schema = example();
    expect(schema.safeParse('aa').success).toBeTruthy();
    expect(schema.safeParse('aaa').success).toBeFalsy();
  });
});

describe(`${title}<<üëåÂü∫Á§éüëå>>`, () => {
  test('Q. Èï∑„Åï„ÅåÊúÄÂ§ß10„ÄÅÊúÄÂ∞è5„Å®„Å™„ÇãÊñáÂ≠óÂàó„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = b1();
    expect(schema.safeParse('a'.repeat(4)).success).toBeFalsy();
    expect(schema.safeParse('a'.repeat(5)).success).toBeTruthy();
    expect(schema.safeParse('a'.repeat(10)).success).toBeTruthy();
    expect(schema.safeParse('a'.repeat(11)).success).toBeFalsy();
  });
  test(`Q. 'https://'Âßã„Åæ„Çã„ÅÆÊñáÂ≠óÂàó„ÅÆ„ÅøË®±ÂÆπ„Åô„Çã„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ`, () => {
    const schema = b2();
    expect(schema.safeParse('https://dsdasdas').success).toBeTruthy();
    expect(schema.safeParse('http://dsdasdas').success).toBeFalsy();
    expect(schema.safeParse('aaaa-https://').success).toBeFalsy();
  });
  test('Q. ÊúÄÂ§ß10„ÄÅÊúÄÂ∞è5„Å®„Å™„ÇãÊï∞ÂÄ§Âûã„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = b3();
    expect(schema.safeParse(4).success).toBeFalsy();
    expect(schema.safeParse(5).success).toBeTruthy();
    expect(schema.safeParse(10).success).toBeTruthy();
    expect(schema.safeParse(11).success).toBeFalsy();
  });
  test('Q.  0„Å®Ê≠£„ÅÆÊï∞„ÇíË®±ÂÆπ„Åô„ÇãÊï∞ÂÄ§Âûã„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = b4();
    expect(schema.safeParse(-1).success).toBeFalsy();
    expect(schema.safeParse(0).success).toBeTruthy();
    expect(schema.safeParse(1).success).toBeTruthy();
  });
  test('Q. Èï∑„Åï„Åå5„Å®„Å™„ÇãÊï∞ÂÄ§ÂûãÈÖçÂàó„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = b5();
    expect(schema.safeParse([0, 0, 0, 0]).success).toBeFalsy();
    expect(schema.safeParse([0, 0, 0, 0, 0]).success).toBeTruthy();
    expect(schema.safeParse([0, 0, 0, 0, 0, 0]).success).toBeFalsy();
  });
});

describe(`${title}<<ü§ØÁô∫Â±ïü§Ø>>`, () => {
  test('Q. ÊñáÂ≠óÂàó"fish","chicken","pork"„ÅÆ„ÅøË®±ÂÆπ„Åô„ÇãÊñáÂ≠óÂàó„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = a1();
    expect(schema.safeParse('fish').success).toBeTruthy();
    expect(schema.safeParse('pork').success).toBeTruthy();
    expect(schema.safeParse('chicken').success).toBeTruthy();

    expect(schema.safeParse('fish2').success).toBeFalsy();
    expect(schema.safeParse('-pork').success).toBeFalsy();
    expect(schema.safeParse('chick').success).toBeFalsy();
  });

  test('Q. ÊñáÂ≠óÂàó„ÄÅ„Åæ„Åü„ÅØ`undefined`„ÅÆ„ÅøË®±ÂÆπ„Åô„Çã„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = a2();
    expect(schema.safeParse('').success).toBeTruthy();
    expect(schema.safeParse('pork').success).toBeTruthy();
    expect(schema.safeParse(undefined).success).toBeTruthy();
    expect(schema.safeParse(null).success).toBeFalsy();
  });
  test('Q. ÊñáÂ≠óÂàó„ÄÅ„Åæ„Åü„ÅØ`null`„ÅÆ„ÅøË®±ÂÆπ„Åô„Çã„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = a3();
    expect(schema.safeParse('').success).toBeTruthy();
    expect(schema.safeParse('pork').success).toBeTruthy();
    expect(schema.safeParse(undefined).success).toBeFalsy();
    expect(schema.safeParse(null).success).toBeTruthy();
  });
});

describe(`${title}<<üëπÈ¨ºüëπ>>`, () => {
  test('Q.Ê¨°„ÅÆ„Éê„É™„Éá„Éº„Ç∑„Éß„É≥„ÇíÊåÅ„Å§„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„ÅÆ„Çπ„Ç≠„Éº„Éû„Çí„Å§„Åè„Çç„ÅÜ', () => {
    const schema = o1();

    const nameSchema = schema.shape.name;
    expect(nameSchema.safeParse('a'.repeat(4)).success).toBeFalsy();
    expect(nameSchema.safeParse('a'.repeat(5)).success).toBeTruthy();
    expect(nameSchema.safeParse('a'.repeat(10)).success).toBeTruthy();
    expect(nameSchema.safeParse('a'.repeat(11)).success).toBeFalsy();

    const ageSchema = schema.shape.age;
    expect(ageSchema.safeParse(30).success).toBeTruthy();
    expect(ageSchema.safeParse('30').success).toBeFalsy();
    expect(ageSchema.safeParse(undefined).success).toBeFalsy();

    const genderSchema = schema.shape.gender;
    expect(genderSchema.safeParse('a'.repeat(10)).success).toBeTruthy();
    expect(genderSchema.safeParse('a'.repeat(11)).success).toBeFalsy();
    expect(genderSchema.safeParse('').success).toBeTruthy();

    const agreeSchema = schema.shape.agree;
    expect(agreeSchema.safeParse(true).success).toBeTruthy();
    expect(agreeSchema.safeParse(false).success).toBeTruthy();
  });
});
